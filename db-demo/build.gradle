apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

// Gradle 完整指南（Android）https://www.jianshu.com/p/9df3c3b6067a
// Android Gradle使用总结 https://blog.csdn.net/zhaoyanjun6/article/details/77678577


//【Android技巧之相见恨晚系列】-自制Gradle脚本动态设置版本号 https://www.jianshu.com/p/a1b0bc453319
ext.majorNumber = 1
ext.minorNumber = 0
ext.revisionNumberCMD = 'git rev-list HEAD --count'
ext.revisionNumber = revisionNumberCMD.execute().getText().trim().toInteger()
ext.revisionDescriptionCMD = 'git describe --always'
ext.tempRevisionDescription = revisionDescriptionCMD.execute().getText().trim()
ext.revisionDescription = (tempRevisionDescription == null || (tempRevisionDescription).size() == 0) ? new Date().format("yyMMdd") : (tempRevisionDescription).substring((tempRevisionDescription).size() - 6)


// 官方文档:http://google.github.io/android-gradle-dsl/current
// Android Gradle使用总结 https://blog.csdn.net/u014608640/article/details/77991899

// https://developer.android.com/studio/publish/app-signing#secure-shared-keystore
// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {    // signingConfigs 需要写在defaultConfig 和buildTypes 前面，不然会编译报错
    // android 使用signingConfigs进行打包 https://blog.csdn.net/bzlj2912009596/article/details/78188570
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    compileSdkVersion 27
    buildToolsVersion '28.0.2'
    defaultConfig {
        applicationId "com.example.db_demo"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode getVersionCode(false)
        versionName getVersionName(false)

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    //greendao配置
    greendao {
        //版本号，升级时可配置
        schemaVersion 1
    }
    buildTypes {
        release {
            // 删除无用代码
            minifyEnabled true
            // 删除无用资源，需要配合minifyEnabled属性使用
            shrinkResources true
            // 指定代码混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //
            zipAlignEnabled true
            signingConfig signingConfigs.release


        }
        debug {

            resValue("string", "PORT_NUMBER", "8081")
        }

    }
//    // 批量打包
//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//
//                File outputDirectory = new File(outputFile.parent)
//                //输出apk名称为：渠道名_版本名_时间.apk
//                def fileName = "${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${releaseTime()}.apk"
//                output.outputFileName =   new File(outputDirectory, fileName)
//            }
//        }
//    }
    // 批量打包
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->

                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {

                        setVersionCodeOverride(getVersionCode(true))
                        setVersionNameOverride( getVersionName(true))
                        // 字符串版本号
                        def versionName =  variant.mergedFlavor.versionName
                        // gradle plugin>3.1时，异常 versionName cannot be set on a mergedFlavor directly. https://stackoverflow.com/questions/51540479/how-to-set-library-version-with-gradle-plugin-3-2
                        // 解决方案 https://stackoverflow.com/questions/46523079/gradle-plugin-3-0-rewrite-versionname
//                        variant.mergedFlavor.versionName = versionName
                        //输出apk名称为：渠道名_版本名_时间.apk
                        def fileName = "XXX_${variant.baseName}_v${versionName}.apk"
                        outputFileName = new File("../", fileName)
                    }
//                    if (outputFile.name.contains("debug")) {
//                        outputFileName = new File("../debug/", "apk-debug-v3.1.0-${releaseTime()}.apk")
//                    }
//                    if (outputFile.name.contains("release")) {
//                        outputFileName = new File("../release/", "apk-release-v3.1.0-${releaseTime()}.apk")
//                    }
            }
    }
    flavorDimensions "brand"
    productFlavors {

        prod {

        }

        qa {
            // qa测试版本
            // 向AndroManifest文件插入变量https://developer.android.com/studio/build/manifest-build-variables

            applicationIdSuffix = ".qa"
            // 会在对应的Flavors下更新R文件
            resValue("string", "strKey", "release版本")

        }

    }
}

// https://stackoverflow.com/questions/36672469/how-do-i-know-the-properties-in-applicationvariants-of-android-gradle-plugin
// http://tools.android.com/tech-docs/new-build-system/user-guide
// 查看Properties
task hello << {
    println "hello ,world"
    android.applicationVariants.all { variant ->
//        println variant.name
//        println variant.outputs
//
//        variant.outputs.all {
//            output ->

        println variant.properties
                .sort { it.key }
                .collect { it }
                .join('\n')
        println "-----------------"
//        }
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'org.greenrobot:greendao:3.2.2' // add library
    // 数据库调试库 https://github.com/amitshekhariitbhu/Android-Debug-Database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

}

def getVersionCode(boolean isRelease) {
    // 正式环境
    if (isRelease) {
        majorNumber * 1000000 + minorNumber * 10000 + revisionNumber
    }
    // debug环境
    else {
        Integer.parseInt(new Date().format("yyMMddHHmm"))
    }
}

//Major_Version_Number.Minor_Version_Number[Revision_Number[.Build_Number]]
def getVersionName(boolean isRelease) {
    // 正式环境
    if (isRelease) {
        majorNumber + "." + minorNumber + "." + revisionNumber + "." + revisionDescription
    }
    // debug环境
    else {
        String today = new Date().format("yyMMdd")
        String time = new Date().format("HHmmss")
        majorNumber + "." + minorNumber + "." + revisionNumber + ".$today.$time." + revisionDescription
    }
}